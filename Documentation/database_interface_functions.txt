Database interface functions:
* item_type = [album or artist or track]

- get_album_likes(user) 			-> returns multiple "album_id"
- get_artist_likes(user) 			-> returns multiple "artist_id"
- get_track_likes(user)				-> returns multiple "track_id"
- get_album_dislikes(user) 			-> returns multiple "album_id"
- get_artist_dislikes(user) 			-> returns multiple "artist_id"
- get_track_dislikes(user)			-> returns multiple "track_id"
- add_liked(user, item_id, item_type)
- set_liked(User, item_id, item_type) 		
- set_disliked(User, item_id, item_type) 	

- get_album_reccomendations(user) 		-> return all "album_id" with "recommended = false"
- get_artist_reccomendations(user)		-> return all "artist_id" with "recommended = false"
- get_track_reccomendations(user)		-> return all "track_id" with "recommended = false"
- add_recommended(user, item_id, item_type)
- set_recommended(user, item_id, item_type)
- delete_current_recommendations(user_id)	

- get_name(item_id, item_type)			-> returns name
- get_image(item_id, item_type)			-> returns image
- get_description(item_id, item_type)		-> returns description
- get_url_link(item_id, item_type)		-> returns url_link
- get_release_date(item_id, item_type)		-> returns release_date
- get_item_object_from_id(item_id, item_type)	-> return item object
- get_album_object(album_name, artist_name)	-> return track object
- get_artist_object(artist_name)		-> return artist object
- get_track_object(track_name, artist_name)	-> return track object
- set_album_id(item_id, album_id)		

- get_tracks_from_album(album_id)		-> returns multiple "track_id"
- add_item(item_type, item_name, item_image, item_description, item_video_link, item_link, item_artist_id=None, item_album_id=None, item_release_date=None)


# if have time:
- get_tracks_from_artist()
- get_albums_from_artist()




